#include<iostream>
#include<ctime>
using namespace std;

void init(int a[], int size);
int average(int a[], int size);
int find_ave(int a[], int size, int average);
int find_max(int a[], int size, int index);
void sort_before(int a[], int size, int index);
void sort_after(int a[], int size, int index);
int find_max_after(int a[], int size, int index);

int main()
{
	srand((unsigned)time(0));
	const int size = 10;
	int a[size];
	init(a, size);
	cout << "Initialize an array" << endl;
	for (int i = 0; i < size; i++)
	{
		cout << "A[" << i + 1 << "]=" << a[i] << " ";
	}
	cout << endl;
	int ave = average(a, size);
	int ave_in = find_ave(a, size, ave);
	cout << "Arithmetic mean of the array: " << ave << endl;
	cout << "Nearest number: " << "A[" << ave_in + 1 << "]=" << a[ave_in] << endl;
	sort_before(a, size, ave_in);
	sort_after(a, size, ave_in);
	cout << "Sorting..." << endl;
	for (int i = 0; i < size; i++)
	{
		cout << "A[" << i + 1 << "]=" << a[i] << " ";
	}
	cout << endl;
	return 0;
}

int find_max(int a[], int size, int index)
{
	int max = a[index];
	int in = index;
	for (int i = index; i < find_ave(a,size,(average(a,size))); i++)
	{
		if (a[i] > max)
		{
			max = a[i];
			in = i;
		}
	}
	return in;
}

int find_max_after(int a[], int size, int index)
{
	int max = a[index];
	int in = index;
	for (int i = index; i < size; i++)
	{
		if (a[i] > max)
		{
			max = a[i];
			in = i;
		}
	}
	return in;
}

void sort_after(int a[], int size, int index)
{
	int temp;
	for (int i = index + 1; i < size; i++)
	{
		temp = a[i];
		int in = find_max_after(a, size, i);
		a[i] = a[in];
		a[in] = temp;
	}
}

void sort_before(int a[], int size, int index)
{
	int temp;
	for (int i = 0; i < index; i++)
	{
		temp = a[i];
		int in = find_max(a, size, i);
		a[i] = a[in];
		a[in] = temp;
	}
}

void init(int a[], int size)
{
	for (int i = 0; i < size; i++)
	{
		a[i] = rand() % 100 + 1;
	}
}

int average(int a[], int size)
{
	int sum = 0;
	for (int i = 0; i < size; i++)
	{
		sum += a[i];
	}
	return sum / size;
}

int find_ave(int a[], int size, int average)
{
	int closer = 0;
	int minDiff = INT_MAX;
	int in = 0;
	for (int i = 0; i < size; i++)
	{
		int diff = abs(average - a[i]);
		if (diff < minDiff)
		{
			minDiff = diff;
			closer = a[i];
			in = i;
		}
	}
	return in;
}