#include<iostream>
#include<ctime>

using namespace std;

int size_b(int *a, int size, int count);
int *give_memory(int *b, int size);
int *free_memory(int*);
int *nsv(int*, int*, int sizea, int sizeb);
void print(int *a, int size);

int main()
{
	srand((unsigned)time(0));

	const int size = 10;
	int a[size] = { 5,6,7,8,9,10,11,12,13,14 };
	int *b = NULL;
	int count = 0;
	print(a, size);
	count = size_b(a, size, count);
	b = give_memory(b, count);
	b = nsv(a, b, size, count);
	print(b, count);
	cout << &b << endl;
	return 0;
}

int size_b(int *a, int size, int count)
{
	for (int i = 0; i < size; i++)
	{
		int f = 0;
		for (int j = 2; j < a[i] / 2; j++)
		{
			if (a[i] % j == 0)
			{
				f = 1;
				break;
			}
		}
		if (f == 1)
		{
			count++;
		}
	}
	return count;
}

void print(int *a, int size)
{
	for (int i = 0; i < size; i++)
	{
		cout << "A[" << i + 1 << "] = " << a[i] << " ";
	}
	cout << endl;
}

int *give_memory(int *b, int size)
{
	b = (int*)malloc(size * sizeof(int));
	return b;
}

int *free_memory(int* a)
{
	free(a);
	a = NULL;
	return a;
}

int *nsv(int* a, int* b, int sizea, int sizeb)
{
	int c = 0;
	for (int i = 0; i < sizea; i++)
	{
		int f = 0;
		for (int j = 2; j < a[i] / 2; j++)
		{
			if (a[i] % j == 0)
			{
				f = 1;
				break;
			}
		}
		if (f == 1)
		{
			b[c] = a[i];
			c++;
		}
	}
	return b;
}
